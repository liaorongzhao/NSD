shell脚本基础知识
一.shell：计算机和用户之间的解释程序。
二.优点：
1.支持tab快捷键（要有这个包bash-completion）
2.history（默认1000条，在/etc/profile中HISTSIZE修改），！加数字或者！加命令开头可以执行历史命令。
history -c  清除历史命令，历史命令保存在家目录 ～/.bash_history 清历史命令可以删除，下次会自动生成
3.别名alias   取消别名 unalisa 命令名   查询是否有别名 alias 命令名
4.标准输入输出，重定向
1)标准重定向输入 > 覆盖  >> 追加
   2> 错误的  &> 所有的
2)重定向输出 < 适用于非交互式场景
  mail  -s  标题  root  <  wenjian
5.管道：多个命令组合，实现某个功能
三.脚本
1.构成：脚本声明，注释信息，执行语句
2.脚本执行进程
1）chmod +x  绝对路径执行  相对路径./脚本   开子进程执行
2）bash  脚本   开子进程执行
3）source  路径/脚本 不开子进程执行
3.内置变量 默认在/etc/profile
  一级提示符   PS1="你好"         提示符就会变成 你好#
  二级提示符   PS2= ##     命令 \(换行)  下的>   提示符就会变成##
全局变量 env(environment) 可查看
set  查看所有的变量包括系统变量和自己设置的变量
$0    脚本自己
$1    第一个参数
$2    第二个参数
$3    第三个参数
$*    显示所有参数
$#    显示参数的个数
$$    脚本的pid号(进程号)
4.引号的用法,三种引号
1)单引号:界定一个完整字符串并且屏蔽特殊符号
2)双引号:界定一个完整的字符串
3)反引号:``和$()意思一样,取命令的结果.里边只能是命令    `date  +%F`取日期
5. read  -p  "提示信息"  变量名
   stty -echo  关闭回显
   stty  echo  显示回显
6.export  可以定义全局变量  export  nb=111
四.数值运算
1. expr   + - \*(要用反斜杠屏蔽*特殊含义,一个斜杠只能屏蔽一个)  **(幂运算) 2**3 就是2的立方,2**4 就是2的4次方  /  %取余数    符号两边要有空格
2.$[]   符号两边不用有空格  
3.let   要把计算结果传给变量,计算中变量不用加$    let  a=1   let b=a+4   echo  $b
  letx++   letx--  letx+=78  letx-=78   letx/=78  letx%=78
4.bc 可以算小数   sacle=2  指定小数点位数  也可以做逻辑判断  echo "3>2" | bc  返回值为0就是判断错的
五.条件判断
1.test和[]  表达式两边都要有空格  test "a" == "b"  ， [ “a" == "b" ]  要用echo $？的返回值来判断是否正确
   !=  取反
2.a && b  并且 
  a || b  或者
  a；b    没有逻辑关系
  -z（zero） 判断是否为空
  ！ -z 非空
3.eq
  ne
  le
  lt
  gt
  ge
4. -e  判断是否存在,不管是文件还是目录
   -d  判断是否存在且是目录
   -f  判断是否存在且为文件
   -r 读权限 -w  写权限  -x 执行权限
5.if条件判断
1)单分支  
if   条件
then
   命令序列
fi    
或者 
if   条件  then;
命令序列
fi
2)if的双分支
if  条件 
then
   命令
 else
  命令
fi
3)if多分支
 if  条件
then
    命令
 elseif  条件
 then   
     命令
else
    命令
  fi
6.for循环
for  变量 in  值列表    
do
   命令
done
备注:值列表的方式
1) 一个个的写出来  a b c 
2){1..6}  数字运算
3)`seq  3 5`   3 4 5  `seq  3 2 10` 是 3 5 7  意思是3-10的范围,每次间隔2    
4)c语言风格的  for  （（i=1;i<=5;i++）） 
               do
               done
九九乘法表
7.while 死循环
while  判断
do
done
8.case  变量  in
值）
   命令；；
值）
   命令；；
值）
   命令
esac

9.shell函数
1）funtion 函数名 {
     命令序列 
}
2）函数名(){
   命令序列
}
调用函数
10.中断控制
continue  跳过本次循环
break     结束整个循环
exit      结束整个脚本

11.字符串处理
1）截取
${变量名：起始位置：截取的长度}   起始位置是从0开始的
expr  substr  “变量” 起始位置  长度    起始位置是从1开始
echo  变量 | cut  -b  起始位置-结束位置   连续的用- ，不连续的用，隔开

2）替换
${变量/old/new}  替换一个
${变量//old/new}  替换所有
3）变量的掐头去尾
${变量# }  最短匹配   ${a## }  最长匹配   去头
${变量% }  最短匹配   ${a%% }  最长匹配   去尾
12.变量赋初始值   ${变量：-word}  意思是变量如有值则输出值，没有值就给一个值word 
13.shell数组  
 一个变量存多个值   a=(11 22 33)   echo ${a[0]} echo {a[1]}
                    a=(aa bb cc)     echo${#a[]} 数组元素个数
14.交互式脚本
15.正则表达式    










