http://118.144.89.240/nsd1803.txt

创建KVM虚拟机模板

1、yum源并安装虚拟化服务器平台
1）qemu-kvm  为kvm提供底层支持
2）libvirt-client   virsh等软件
3）libvirt-daemon  服务的守护进程
4）libvirt-daemon-driver-qemu    驱动程序
5）启动libvirtd服务

2、建立vbr虚拟网络
1）配置xml文件   /etc/libvirt/qemu/networks/vbr.xml
2）net-define  vbr.xml 文件
3）net-start  vbr  &&  net-auto  vbr

3、创建qcow2镜像盘文件
qemu-img  create  -f  qcow2  node.qcow2  16G

4、自定义系统安装（用网络源安装） 
 要选择网络vbr

5、禁用selinux，卸载Firewall，NetworkManager，
修改网卡配置文件/etc/sysconfig/network-skript/ifcfg-eth0     DEVICE=eth0  
并重启network服务。

6、安装常用软件net-tools，vim-enhanced，导入rpm包标签，禁用空路由/etc/sysconfig/network（NOZEROCONF=yes），添加console配置文件/etc/default/grub，重新生成grub.cfg，安装扩展分区软件cloud-utils-growpart

7、关闭虚拟机然后在物理机执行清理工作：virt-sysprep  -d  模板机器名字

　　　　　　　　　　　　快速新建虚拟机
1、在/etc/libvirt/qemu/配置xml文件
2、在/var/lib/libvirt/images/以模板为base生成新的镜像文件
3、Virsh define   name.xml  && virsh start  name

　　　　　　　　　　　为虚拟机添加网卡和磁盘
Virsh  edit  name（网卡关键字：inter 磁盘：disk）
Virsh  define name.xml  &&   关闭虚拟机并重新启动


云计算

一、云计算的定义
1、IaaS云
基础设施即服务：infrastructure-as-a-service，分三类：私有云，公有云，混合云
2、PaaS云
平台即服务：platform-as-a-service
3、SaaS云
软件即服务：software-as-a-service

二、OpenStack概述
1、是什么，干什么
一套Apache认证的IaaS解决方案的开源云计算管理平台
2、主要的组件
1）Horizon：各种服务的基于web的管理接口，图形界面创建用户，管理网络，启动实例
2）Keystone：为其他服务提供认证和授权的服务（相当于门口保安）
3）Neutron：用软件来定义虚拟网络（虚拟交换机）
4）Cinder：为虚拟机管理存储卷的服务（也就是管理虚拟机硬盘的，有快照备份的机制）
5）Nova：安装在虚拟机上的，用于管理虚拟机的一个分布式服务
6）Glance：管理虚拟机的镜像（类似于yum源、商店）

三、OpenStack部署
 1、环境准备
1）yum仓库：三张光盘，12个yum源 ,其中系统的源要导入公钥
2）dns解析：指向真机（/etc/resolve.conf  nameserver 192.168.1.254），并且改一下主机eth0和eth1地址为静态地址，一个1网段，一个2网段
3）ntp时间服务器
 2、装包 OpenStack-packstack
 3、生成应答文件   packstack  --gen-answer-file   answer.ini 并且修改
 4、装机   packstack  --answer-file=answer.ini
 
四、openstack实战
  1、horizon组件：提供图形界面，用户管理和配额管理
  2、glance组件 ：管理镜像，提供最底层的块结构
  3、neutron组件：管理网络
  4、安全组：限制入口和出口
五 各种云产品
六、docker
 1.docker部署
2.常用命令
docker  version         查看版本
docker  images          查看镜像
docker search 关键字    查询镜像
docker pull 镜像名字    下载镜像
docker  help  命令    查看帮助文档
docker  save  镜像:标签名 >  镜像名.tar   导出镜像
docker load  <  镜像名.tar   导入镜像    
docker  run  -it(交互式终端i:interaction,t:terminal)  镜像名:标签  镜像里的命令(/bin/bash)    启动容器
如果容器和宿主机ping不通,把net.ipv4.ip_forward = 1  写到 /etc/sysctl.conf中   打开容器的路由转发功能
docker  ps  -a  查看所有的容器(不加-a默认显示正在运行的容器)
docker history         查看镜像制作历史
docker inspect         查看镜像详细信息
docker  rmi   名字:标签     删除镜像    要先删除容器才能删镜像
docker  tag   原名称:标签   新名称:新标签

 容器的命令
1).docker  run   -i 交互式  -t 终端  -d后台进程 
 docker  run -it  centos  /bin/bash      启动一个交互式的终端
 docker  run -d   nginx    启动服务(非交互式)
 docker   run  -itd  centos   /bin/bash   启动一个交互式的终端放入后台
2).docker  ps   -a   显示所有的容器   -q 减少输出,只显示id
3).docker start  $(docker  ps  -aq)  启动所有容器
4.)docker stop   $(docker  ps  -aq)  停止所有容器
5).docker  rm   $(docker  ps  -aq ) 删除所有容器 ,删除容器之前要先关闭容器

3.自定义镜像
  创建容器  docker  run -it  centos:latest   /bin/bash
  修改配置,安装软件
  ps  -a  看容器的id
 创建镜像   docker  commit   id     新容器名:latest
  docker  images
4.Dockerfile文件
FROM   基础镜像
ADD   复制文件到容器
RUN   在容器中运行的命令  




























